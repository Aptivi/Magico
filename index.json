{
  "api/Magico.Enumeration.EnumerableExtensions.html": {
    "href": "api/Magico.Enumeration.EnumerableExtensions.html",
    "title": "Class EnumerableExtensions | Magico API - Aptivi",
    "keywords": "Class EnumerableExtensions Extensions class for non-generic IEnumerable instances. Inheritance object EnumerableExtensions Namespace: Magico.Enumeration Assembly: Magico.dll Syntax public static class EnumerableExtensions Methods | Edit this page View Source GetElementFromIndex(IEnumerable, int) Gets an element from the index Declaration public static object? GetElementFromIndex(this IEnumerable enumerable, int index) Parameters Type Name Description IEnumerable enumerable The target enumerable to get an element int index Zero-based index number of an element Returns Type Description object An element from this enumerable | Edit this page View Source Length(IEnumerable) Counts the elements found in this enumerable Declaration public static int Length(this IEnumerable enumerable) Parameters Type Name Description IEnumerable enumerable The target enumerable to count its elements Returns Type Description int A number of elements | Edit this page View Source ToDictionarySafe<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>) Safely converts the source enumerable to the dictionary Declaration public static Dictionary<TKey, TValue> ToDictionarySafe<TSource, TKey, TValue>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TValue> valueSelector) where TKey : notnull Parameters Type Name Description IEnumerable<TSource> source Func<TSource, TKey> keySelector Func<TSource, TValue> valueSelector Returns Type Description Dictionary<TKey, TValue> Type Parameters Name Description TSource Source element type TKey Key type TValue Value type | Edit this page View Source Zip<TFirst, TSecond>(IEnumerable<TFirst>, IEnumerable<TSecond>) Merges the two input sequences into one Declaration public static IEnumerable<(TFirst First, TSecond Second)> Zip<TFirst, TSecond>(this IEnumerable<TFirst> source, IEnumerable<TSecond> second) Parameters Type Name Description IEnumerable<TFirst> source Source sequence to merge IEnumerable<TSecond> second Second sequence to merge Returns Type Description IEnumerable<(TFirst First, TSecond Second)> Merged sequences Type Parameters Name Description TFirst First type TSecond Second type"
  },
  "api/Magico.Enumeration.html": {
    "href": "api/Magico.Enumeration.html",
    "title": "Namespace Magico.Enumeration | Magico API - Aptivi",
    "keywords": "Namespace Magico.Enumeration Classes EnumerableExtensions Extensions class for non-generic IEnumerable instances."
  },
  "api/Magico.Files.MagicException.html": {
    "href": "api/Magico.Files.MagicException.html",
    "title": "Class MagicException | Magico API - Aptivi",
    "keywords": "Class MagicException Creates an instance of magic exception Inheritance object Exception MagicException Namespace: Magico.Files Assembly: Magico.dll Syntax public class MagicException : Exception Constructors | Edit this page View Source MagicException() Raises the libmagic exception Declaration public MagicException() | Edit this page View Source MagicException(string) Raises the libmagic exception Declaration public MagicException(string message) Parameters Type Name Description string message Message for additional info | Edit this page View Source MagicException(string, Exception) Raises the libmagic exception Declaration public MagicException(string message, Exception innerException) Parameters Type Name Description string message Message for additional info Exception innerException Inner exception for additional diagnostic info"
  },
  "api/Magico.Files.MagicHandler.html": {
    "href": "api/Magico.Files.MagicHandler.html",
    "title": "Class MagicHandler | Magico API - Aptivi",
    "keywords": "Class MagicHandler Magic handling tools Inheritance object MagicHandler Namespace: Magico.Files Assembly: Magico.dll Syntax public static class MagicHandler Properties | Edit this page View Source MagicVersionId libmagic version identification number Declaration public static int MagicVersionId { get; } Property Value Type Description int Methods | Edit this page View Source GetMagicCustomType(string, MagicFlags, MagicParameters, int) Gets the file magic Mime type information Declaration public static string GetMagicCustomType(string filePath, MagicFlags flags, MagicParameters parameter = MagicParameters.None, int paramValue = 0) Parameters Type Name Description string filePath Target file path MagicFlags flags Magic flags to customize the output and the behavior of the native library MagicParameters parameter Parameter to use int paramValue Parameter value to set to Returns Type Description string | Edit this page View Source GetMagicCustomType(string, string, MagicFlags, MagicParameters, int) Gets the file magic Mime type information Declaration public static string GetMagicCustomType(string filePath, string magicPath, MagicFlags flags, MagicParameters parameter = MagicParameters.None, int paramValue = 0) Parameters Type Name Description string filePath Target file path string magicPath Path to the file magic database MagicFlags flags Magic flags to customize the output and the behavior of the native library MagicParameters parameter Parameter to use int paramValue Parameter value to set to Returns Type Description string | Edit this page View Source GetMagicInfo(string, MagicParameters, int) Gets the file magic information Declaration public static string GetMagicInfo(string filePath, MagicParameters parameter = MagicParameters.None, int paramValue = 0) Parameters Type Name Description string filePath Target file path MagicParameters parameter Parameter to use int paramValue Parameter value to set to Returns Type Description string | Edit this page View Source GetMagicInfo(string, string, MagicParameters, int) Gets the file magic information Declaration public static string GetMagicInfo(string filePath, string magicPath, MagicParameters parameter = MagicParameters.None, int paramValue = 0) Parameters Type Name Description string filePath Target file path string magicPath Path to the file magic database MagicParameters parameter Parameter to use int paramValue Parameter value to set to Returns Type Description string | Edit this page View Source GetMagicMimeInfo(string, MagicParameters, int) Gets the file magic Mime information Declaration public static string GetMagicMimeInfo(string filePath, MagicParameters parameter = MagicParameters.None, int paramValue = 0) Parameters Type Name Description string filePath Target file path MagicParameters parameter Parameter to use int paramValue Parameter value to set to Returns Type Description string | Edit this page View Source GetMagicMimeInfo(string, string, MagicParameters, int) Gets the file magic Mime information Declaration public static string GetMagicMimeInfo(string filePath, string magicPath, MagicParameters parameter = MagicParameters.None, int paramValue = 0) Parameters Type Name Description string filePath Target file path string magicPath Path to the file magic database MagicParameters parameter Parameter to use int paramValue Parameter value to set to Returns Type Description string | Edit this page View Source GetMagicMimeType(string, MagicParameters, int) Gets the file magic Mime type information Declaration public static string GetMagicMimeType(string filePath, MagicParameters parameter = MagicParameters.None, int paramValue = 0) Parameters Type Name Description string filePath Target file path MagicParameters parameter Parameter to use int paramValue Parameter value to set to Returns Type Description string | Edit this page View Source GetMagicMimeType(string, string, MagicParameters, int) Gets the file magic Mime type information Declaration public static string GetMagicMimeType(string filePath, string magicPath, MagicParameters parameter = MagicParameters.None, int paramValue = 0) Parameters Type Name Description string filePath Target file path string magicPath Path to the file magic database MagicParameters parameter Parameter to use int paramValue Parameter value to set to Returns Type Description string | Edit this page View Source GetMagicPaths(string?, bool) Gets the file magic paths Declaration public static string[] GetMagicPaths(string? magicPath = null, bool systemWide = false) Parameters Type Name Description string magicPath Magic path. If null, the libmagic library tries to find the magic database files. bool systemWide Uses system-wide magic path if magicPath is null. This has no effect if that path is not null Returns Type Description string[] A colon separated list of magic locations"
  },
  "api/Magico.Files.html": {
    "href": "api/Magico.Files.html",
    "title": "Namespace Magico.Files | Magico API - Aptivi",
    "keywords": "Namespace Magico.Files Classes MagicException Creates an instance of magic exception MagicHandler Magic handling tools"
  },
  "index.html": {
    "href": "index.html",
    "title": "| Magico API - Aptivi",
    "keywords": "What is Magico? Magico is a C# library that allows you to do various magical things, such as doing IEnumerable magic tricks and getting deep information about a file, including its extensive details, using the libmagic library from the file utility found in Unix and Linux systems. What is this web page? This webpage is an API documentation for mod developers to be used as reference. It constantly gets updated as we push the updates to the main and servicing versions of this project. If you still intend to use a documentation specific to your preferred version of Magico, you may refer to the releases page of the project and download the attached <version>-doc.zip file. To get started using the documentation, select API Documentation from the top menu and select a namespace to get a clear overview of the API. Feedback If you wish to leave feedback to us about this API reference website, use the issue tracker of the project. If you wish to contribute to the documentation of the API, go to the project source code and make your improvements there on a draft Pull Request; we don't support override files that are made by clicking on Improve this doc. Any meaningful contributions are welcome. Copyright (c) 2024 Aptivi. All rights reserved."
  }
}