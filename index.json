{
  "api/Magico.Enumeration.EnumerableExtensions.html": {
    "href": "api/Magico.Enumeration.EnumerableExtensions.html",
    "title": "Class EnumerableExtensions | Magico API - Aptivi",
    "summary": "Class EnumerableExtensions Extensions class for non-generic System.Collections.IEnumerable instances. Inheritance object EnumerableExtensions Namespace: Magico.Enumeration Assembly: Magico.dll Syntax public static class EnumerableExtensions Methods | Edit this page View Source GetElementFromIndex(IEnumerable, int) Gets an element from the index Declaration public static object? GetElementFromIndex(this IEnumerable enumerable, int index) Parameters Type Name Description IEnumerable enumerable The target enumerable to get an element int index Zero-based index number of an element Returns Type Description object An element from this enumerable | Edit this page View Source Length(IEnumerable) Counts the elements found in this enumerable Declaration public static int Length(this IEnumerable enumerable) Parameters Type Name Description IEnumerable enumerable The target enumerable to count its elements Returns Type Description int A number of elements | Edit this page View Source ToDictionarySafe<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>) Safely converts the source enumerable to the dictionary Declaration public static Dictionary<TKey, TValue> ToDictionarySafe<TSource, TKey, TValue>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TValue> valueSelector) where TKey : notnull Parameters Type Name Description IEnumerable<TSource> source Func<TSource, TKey> keySelector Func<TSource, TValue> valueSelector Returns Type Description Dictionary<TKey, TValue> Type Parameters Name Description TSource Source element type TKey Key type TValue Value type | Edit this page View Source Zip<TFirst, TSecond>(IEnumerable<TFirst>, IEnumerable<TSecond>) Merges the two input sequences into one Declaration public static IEnumerable<(TFirst First, TSecond Second)> Zip<TFirst, TSecond>(this IEnumerable<TFirst> source, IEnumerable<TSecond> second) Parameters Type Name Description IEnumerable<TFirst> source Source sequence to merge IEnumerable<TSecond> second Second sequence to merge Returns Type Description IEnumerable<(TFirst First, TSecond Second)> Merged sequences Type Parameters Name Description TFirst First type TSecond Second type"
  },
  "api/Magico.Enumeration.html": {
    "href": "api/Magico.Enumeration.html",
    "title": "Namespace Magico.Enumeration | Magico API - Aptivi",
    "summary": "Namespace Magico.Enumeration Classes EnumerableExtensions Extensions class for non-generic System.Collections.IEnumerable instances."
  },
  "api/Magico.Files.MagicException.html": {
    "href": "api/Magico.Files.MagicException.html",
    "title": "Class MagicException | Magico API - Aptivi",
    "summary": "Class MagicException Creates an instance of magic exception Inheritance object Exception MagicException Namespace: Magico.Files Assembly: Magico.dll Syntax public class MagicException : Exception Constructors | Edit this page View Source MagicException() Raises the libmagic exception Declaration public MagicException() | Edit this page View Source MagicException(string) Raises the libmagic exception Declaration public MagicException(string message) Parameters Type Name Description string message Message for additional info | Edit this page View Source MagicException(string, Exception) Raises the libmagic exception Declaration public MagicException(string message, Exception innerException) Parameters Type Name Description string message Message for additional info Exception innerException Inner exception for additional diagnostic info"
  },
  "api/Magico.Files.MagicHandler.html": {
    "href": "api/Magico.Files.MagicHandler.html",
    "title": "Class MagicHandler | Magico API - Aptivi",
    "summary": "Class MagicHandler Magic handling tools Inheritance object MagicHandler Namespace: Magico.Files Assembly: Magico.dll Syntax public static class MagicHandler Properties | Edit this page View Source MagicVersionId libmagic version identification number Declaration public static int MagicVersionId { get; } Property Value Type Description int Methods | Edit this page View Source GetMagicCustomType(string, MagicFlags, MagicParameters, int) Gets the file magic Mime type information Declaration public static string GetMagicCustomType(string filePath, MagicFlags flags, MagicParameters parameter = MagicParameters.None, int paramValue = 0) Parameters Type Name Description string filePath Target file path MagicFlags flags Magic flags to customize the output and the behavior of the native library MagicParameters parameter Parameter to use int paramValue Parameter value to set to Returns Type Description string | Edit this page View Source GetMagicCustomType(string, string, MagicFlags, MagicParameters, int) Gets the file magic Mime type information Declaration public static string GetMagicCustomType(string filePath, string magicPath, MagicFlags flags, MagicParameters parameter = MagicParameters.None, int paramValue = 0) Parameters Type Name Description string filePath Target file path string magicPath Path to the file magic database MagicFlags flags Magic flags to customize the output and the behavior of the native library MagicParameters parameter Parameter to use int paramValue Parameter value to set to Returns Type Description string | Edit this page View Source GetMagicInfo(string, MagicParameters, int) Gets the file magic information Declaration public static string GetMagicInfo(string filePath, MagicParameters parameter = MagicParameters.None, int paramValue = 0) Parameters Type Name Description string filePath Target file path MagicParameters parameter Parameter to use int paramValue Parameter value to set to Returns Type Description string | Edit this page View Source GetMagicInfo(string, string, MagicParameters, int) Gets the file magic information Declaration public static string GetMagicInfo(string filePath, string magicPath, MagicParameters parameter = MagicParameters.None, int paramValue = 0) Parameters Type Name Description string filePath Target file path string magicPath Path to the file magic database MagicParameters parameter Parameter to use int paramValue Parameter value to set to Returns Type Description string | Edit this page View Source GetMagicMimeInfo(string, MagicParameters, int) Gets the file magic Mime information Declaration public static string GetMagicMimeInfo(string filePath, MagicParameters parameter = MagicParameters.None, int paramValue = 0) Parameters Type Name Description string filePath Target file path MagicParameters parameter Parameter to use int paramValue Parameter value to set to Returns Type Description string | Edit this page View Source GetMagicMimeInfo(string, string, MagicParameters, int) Gets the file magic Mime information Declaration public static string GetMagicMimeInfo(string filePath, string magicPath, MagicParameters parameter = MagicParameters.None, int paramValue = 0) Parameters Type Name Description string filePath Target file path string magicPath Path to the file magic database MagicParameters parameter Parameter to use int paramValue Parameter value to set to Returns Type Description string | Edit this page View Source GetMagicMimeType(string, MagicParameters, int) Gets the file magic Mime type information Declaration public static string GetMagicMimeType(string filePath, MagicParameters parameter = MagicParameters.None, int paramValue = 0) Parameters Type Name Description string filePath Target file path MagicParameters parameter Parameter to use int paramValue Parameter value to set to Returns Type Description string | Edit this page View Source GetMagicMimeType(string, string, MagicParameters, int) Gets the file magic Mime type information Declaration public static string GetMagicMimeType(string filePath, string magicPath, MagicParameters parameter = MagicParameters.None, int paramValue = 0) Parameters Type Name Description string filePath Target file path string magicPath Path to the file magic database MagicParameters parameter Parameter to use int paramValue Parameter value to set to Returns Type Description string | Edit this page View Source GetMagicPaths(string?, bool) Gets the file magic paths Declaration public static string[] GetMagicPaths(string? magicPath = null, bool systemWide = false) Parameters Type Name Description string magicPath Magic path. If null, the libmagic library tries to find the magic database files. bool systemWide Uses system-wide magic path if magicPath is null. This has no effect if that path is not null Returns Type Description string[] A colon separated list of magic locations"
  },
  "api/Magico.Files.html": {
    "href": "api/Magico.Files.html",
    "title": "Namespace Magico.Files | Magico API - Aptivi",
    "summary": "Namespace Magico.Files Classes MagicException Creates an instance of magic exception MagicHandler Magic handling tools"
  },
  "api/Magico.Native.Interop.MagicFlags.html": {
    "href": "api/Magico.Native.Interop.MagicFlags.html",
    "title": "Enum MagicFlags | Magico API - Aptivi",
    "summary": "Enum MagicFlags libmagic flags Namespace: Magico.Native.Interop Assembly: Magico.Native.dll Syntax public enum MagicFlags Fields Name Description Apple #define MAGIC_APPLE 0x0000800 Check #define MAGIC_CHECK 0x0000040 Compress #define MAGIC_COMPRESS 0x0000004 CompressTransp #define MAGIC_COMPRESS_TRANSP 0x2000000 Continue #define MAGIC_CONTINUE 0x0000020 Debug #define MAGIC_DEBUG 0x0000001 Devices #define MAGIC_DEVICES 0x0000008 Error #define MAGIC_ERROR 0x0000200 Extension #define MAGIC_EXTENSION 0x1000000 Mime #define MAGIC_MIME (MAGIC_MIME_TYPE|MAGIC_MIME_ENCODING) MimeEncoding #define MAGIC_MIME_ENCODING 0x0000400 MimeType #define MAGIC_MIME_TYPE 0x0000010 NoCheckAppType #define MAGIC_NO_CHECK_APPTYPE 0x0008000 NoCheckBuiltin #define MAGIC_NO_CHECK_BUILTIN ... NoCheckCdf #define MAGIC_NO_CHECK_CDF 0x0040000 NoCheckCompress #define MAGIC_NO_CHECK_COMPRESS 0x0001000 NoCheckCsv #define MAGIC_NO_CHECK_CSV 0x0080000 NoCheckElf #define MAGIC_NO_CHECK_ELF 0x0010000 NoCheckEncoding #define MAGIC_NO_CHECK_ENCODING 0x0200000 NoCheckJson #define MAGIC_NO_CHECK_JSON 0x0400000 NoCheckSimh #define MAGIC_NO_CHECK_SIMH 0x0800000 NoCheckSoft #define MAGIC_NO_CHECK_SOFT 0x0004000 NoCheckTar #define MAGIC_NO_CHECK_TAR 0x0002000 NoCheckText #define MAGIC_NO_CHECK_TEXT 0x0020000 NoCheckTokens #define MAGIC_NO_CHECK_TOKENS 0x0100000 NoCompressFork #define MAGIC_NO_COMPRESS_FORK 0x4000000 NoDesc #define MAGIC_NODESC (MAGIC_EXTENSION|MAGIC_MIME|MAGIC_APPLE) None #define MAGIC_NONE 0x0000000 PreserveAccessTime #define MAGIC_PRESERVE_ATIME 0x0000080 Raw #define MAGIC_RAW 0x0000100 Symlink #define MAGIC_SYMLINK 0x0000002"
  },
  "api/Magico.Native.Interop.MagicParameters.html": {
    "href": "api/Magico.Native.Interop.MagicParameters.html",
    "title": "Enum MagicParameters | Magico API - Aptivi",
    "summary": "Enum MagicParameters Magic parameters Namespace: Magico.Native.Interop Assembly: Magico.Native.dll Syntax public enum MagicParameters Fields Name Description BytesMax #define MAGIC_PARAM_BYTES_MAX 6 ElfNotesMax #define MAGIC_PARAM_ELF_NOTES_MAX 4 ElfPhnumMax #define MAGIC_PARAM_ELF_PHNUM_MAX 2 ElfShSizeMax #define MAGIC_PARAM_ELF_SHSIZE_MAX 8 ElfShnumMax #define MAGIC_PARAM_ELF_SHNUM_MAX 3 EncodingMax #define MAGIC_PARAM_ENCODING_MAX 7 InDirMax #define MAGIC_PARAM_INDIR_MAX 0 MagWarnMax #define MAGIC_PARAM_MAGWARN_MAX 9 NameMax #define MAGIC_PARAM_NAME_MAX 1 None No parameters RegexMax #define MAGIC_PARAM_REGEX_MAX 5"
  },
  "api/Magico.Native.Interop.html": {
    "href": "api/Magico.Native.Interop.html",
    "title": "Namespace Magico.Native.Interop | Magico API - Aptivi",
    "summary": "Namespace Magico.Native.Interop Enums MagicFlags libmagic flags MagicParameters Magic parameters"
  },
  "api/Magico.Reflection.BaseClassTools.html": {
    "href": "api/Magico.Reflection.BaseClassTools.html",
    "title": "Class BaseClassTools | Magico API - Aptivi",
    "summary": "Class BaseClassTools Tools for base classes Inheritance object BaseClassTools Namespace: Magico.Reflection Assembly: Magico.dll Syntax public static class BaseClassTools Methods | Edit this page View Source GetBaseTypes(Type) Gets the base types that a class inherits from Declaration public static Type[] GetBaseTypes(Type sourceType) Parameters Type Name Description Type sourceType Source type to query the base classes Returns Type Description Type[] Type instances that contain information about base classes"
  },
  "api/Magico.Reflection.html": {
    "href": "api/Magico.Reflection.html",
    "title": "Namespace Magico.Reflection | Magico API - Aptivi",
    "summary": "Namespace Magico.Reflection Classes BaseClassTools Tools for base classes"
  },
  "index.html": {
    "href": "index.html",
    "title": "| Magico API - Aptivi",
    "summary": "What is this web page? This webpage is an API documentation for developers to be used as reference. It constantly gets updated as we push new versions and new APIs, as well as updated documentation. If your IDE supports Intellisense, you don't need to open this web page. If you still intend to use a documentation specific to your preferred version, you may refer to the releases page of the project and download the attached <version>-doc.zip file. To get started using the documentation, select API Documentation from the top menu and select a namespace to get a clear overview of the API. Feedback If you wish to leave feedback to us about this API reference website, use the issue tracker of the project. If you wish to contribute to the documentation of the API, go to the project source code and make your improvements there on a draft Pull Request; we don't support override files that are made by clicking on Improve this doc. Any meaningful contributions are welcome, as long as they follow the code on conduct and contribution guidelines."
  }
}